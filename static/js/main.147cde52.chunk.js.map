{"version":3,"sources":["components/OutputCanvas.tsx","initialize.ts","components/Arrow.tsx","components/Switch.tsx","components/Tab.tsx","components/Buttons.tsx","components/TweetButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OutputCanvas","props","outputOperators","useState","context","setContext","lineLength","useEffect","canvasContext","document","getElementById","getContext","console","log","canvas","clearRect","width","height","operatorToRectProps","state","r","arrowDirection","direction","moveDirection","isMatchDirection","operator","temp","l","x","y","w","h","plus","minus","Math","min","translateStartPoint","button","lengthRatio","allowedArrowDirections","arrowDirectionIndex","positionRatioX","positionRatioY","drawOutput","color","fillStyle","fillRect","drawExpected","radius","operations","beginPath","arc","PI","stroke","clear","drawClearStartPoint","id","Arrow","xmlns","viewBox","fill","d","Switch","size","Tab","style","transform","Buttons","stage","handleNextButton","setDirection","switchState","setSwitchState","setArrowDirectionIndex","maxWidth","margin","marginTop","display","flexDirection","justifyContent","className","onClick","length","TweetButton","window","twttr","widgets","load","href","encodeURIComponent","text","url","App","initState","setStage","outputs","setOutputOperators","isClear","findIndex","e","copy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.147cde52.chunk.js","sourcesContent":["import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { clearGameState } from '../initialize';\r\nimport { ArrowDirection, Direction } from '../interface';\r\nimport { OutputOperators as IOutputOperators, ButtonOperationState } from '../interface';\r\n\r\ninterface RectProps {\r\n    l: number, // fillRectには渡さないが変換で使用する「長さ」の固定値\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n}\r\n\r\nexport const OutputCanvas = (props: IOutputOperators) => {\r\n    const { ...outputOperators } = props\r\n    const [context, setContext]: [CanvasRenderingContext2D | null, Dispatch<SetStateAction<CanvasRenderingContext2D | null>>] = useState<CanvasRenderingContext2D | null>(null)\r\n    // 画像読み込み完了トリガー\r\n    // const [loaded,setLoaded] = useState(false)\r\n\r\n    // 線描補助関数\r\n    const height = 300\r\n    const width = 300\r\n    const lineLength = 100\r\n    const lineWidth = 5\r\n\r\n    // Canvas中央に線描される長さが 基準値*lengthRatio の横棒の初期値を作成\r\n    const initialRect = (lengthRatio: number): RectProps => {\r\n        return {\r\n            l: lineLength * lengthRatio,\r\n            x: width / 2 - (lineLength / 2) * lengthRatio,\r\n            y: height / 2 - lineWidth / 2,\r\n            w: lineLength * lengthRatio,\r\n            h: lineWidth,\r\n        }\r\n    }\r\n\r\n    // 水平・垂直方向の変換\r\n    const button = (r: RectProps, state: Direction): RectProps => {\r\n        // 初期値は水平なので変換しないで返す\r\n        if (state === \"horizontal\") return r;\r\n\r\n        return {\r\n            l: r.l,\r\n            x: r.y,\r\n            y: r.x,\r\n            w: r.h,\r\n            h: r.w,\r\n        }\r\n    }\r\n\r\n    // 書き順の始点に対してどちら向きに伸ばすかを決定する\r\n    const translateStartPoint = (r: RectProps, arrowDirection: ArrowDirection, direction: Direction): RectProps => {\r\n        const moveDirection = arrowDirection === \"up\" || arrowDirection === \"down\" ? \"y\" : \"x\"\r\n        // 中央揃えの影響で，動かす方向と線の方向が一致している場合に左上の座標の移動量が多くなるため補正をかける\r\n        const isMatchDirection = (moveDirection === \"x\" && direction === \"horizontal\") || (moveDirection === \"y\" && direction === \"vertical\")\r\n        const operator = arrowDirection === \"right\" || arrowDirection === \"down\" ? \"plus\" : \"minus\"\r\n        const operations = {\r\n            plus: (x: number, y: number): number => x + y,\r\n            minus: (x: number, y: number): number => x - y,\r\n        }\r\n        const temp = {\r\n            l: r.l,\r\n            x: r.x,\r\n            y: r.y,\r\n            w: r.w,\r\n            h: r.h,\r\n        }\r\n        temp[moveDirection] = operations[operator](temp[moveDirection], temp.l / 2 - (isMatchDirection ? Math.min(temp.w, temp.h) / 2 : 0))\r\n        return temp\r\n    }\r\n\r\n    // 書き順の始点を移動する\r\n    const transrateBasePoint = (r: RectProps, x: number, y: number): RectProps => {\r\n        return {\r\n            l: r.l,\r\n            x: r.x + lineLength * x,\r\n            y: r.y + lineLength * y,\r\n            w: r.w,\r\n            h: r.h,\r\n        }\r\n    }\r\n\r\n\r\n    // コンポーネントの初期化完了後コンポーネント状態にコンテキストを登録\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        setContext(canvasContext)\r\n    }, [])\r\n    // 状態にコンテキストが登録されたらそれに対して操作できる\r\n    useEffect(() => {\r\n        console.log('catch change')\r\n        if (context !== null) {\r\n            const canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            const operatorToRectProps = (state: ButtonOperationState): RectProps => {\r\n                // canvasでの座標の向きは右および下が正の方向になっているので注意\r\n                // transrateBasePoint(translateStartPoint(button(initialRect(<中央スイッチによる長さ>),\"<ガスコンロ>\"),\"<矢印向き>\"),<書き順始点x移動比率>,<書き順始点y移動比率>);\r\n                return transrateBasePoint(\r\n                    translateStartPoint(\r\n                        button(\r\n                            initialRect(state.lengthRatio),\r\n                            state.direction),\r\n                        state.allowedArrowDirections[state.arrowDirectionIndex],\r\n                        state.direction,\r\n                    ),\r\n                    state.positionRatioX,\r\n                    state.positionRatioY,\r\n                );\r\n            }\r\n            const drawOutput = (props: RectProps, color: string) => {\r\n                context.fillStyle = color;\r\n                context.fillRect(props.x, props.y, props.w, props.h);\r\n            }\r\n            const drawExpected = (props: RectProps, radius: number = 10) => {\r\n                const operations = {\r\n                    plus: (x: number, y: number): number => x + y,\r\n                    minus: (x: number, y: number): number => x - y,\r\n                }\r\n                context.beginPath();\r\n                context.arc(\r\n                    operations[\"plus\"](props.x, Math.min(props.w, props.h) / 2),\r\n                    operations[\"plus\"](props.y, Math.min(props.w, props.h) / 2),\r\n                    radius, 0, 2 * Math.PI);\r\n                context.stroke();\r\n            }\r\n            // クリア時の情報から開始地点を表示する\r\n            const drawClearStartPoint = () => {\r\n                const clear = clearGameState()\r\n                drawExpected(operatorToRectProps(clear[1 - 1]))\r\n                drawExpected(operatorToRectProps(clear[2 - 1]))\r\n                drawExpected(operatorToRectProps(clear[3 - 1]))\r\n                drawExpected(operatorToRectProps(clear[4 - 1]))\r\n                drawExpected(operatorToRectProps(clear[5 - 1]))\r\n            }\r\n            drawClearStartPoint()\r\n            // 実際のユーザ操作結果の線描（canvasは「書いたものを動かす」処理がないので数値の処理をしてから書く\r\n            drawOutput(operatorToRectProps(outputOperators[1 - 1]), 'black')\r\n            drawOutput(operatorToRectProps(outputOperators[2 - 1]), 'black')\r\n            drawOutput(operatorToRectProps(outputOperators[3 - 1]), 'black')\r\n            drawOutput(operatorToRectProps(outputOperators[4 - 1]), 'black')\r\n            drawOutput(operatorToRectProps(outputOperators[5 - 1]), 'black')\r\n        }\r\n    }, [context, outputOperators])\r\n\r\n    return <canvas id=\"canvas\" width=\"300px\" height=\"300px\" />\r\n}","import { OutputOperators } from './interface';\r\n\r\nexport function initializeGameState(): OutputOperators {\r\n    return [\r\n        {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: -0.5,\r\n            positionRatioY: -0.5,\r\n            allowedArrowDirections: [\"right\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: 0,\r\n            positionRatioY: -0.5,\r\n            allowedArrowDirections: [\"up\", \"down\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: 0,\r\n            positionRatioY: 0,\r\n            allowedArrowDirections: [\"left\",\"right\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: -0.25,\r\n            positionRatioY: 0,\r\n            allowedArrowDirections: [\"up\", \"down\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: -0.5,\r\n            positionRatioY: 0.5,\r\n            allowedArrowDirections: [\"left\",\"right\"],\r\n        }\r\n    ]\r\n}\r\n\r\nexport function clearGameState(): OutputOperators {\r\n    return [\r\n        {\r\n            direction: \"horizontal\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: -0.5,\r\n            positionRatioY: -0.5,\r\n            allowedArrowDirections: [\"right\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: 0,\r\n            positionRatioY: -0.5,\r\n            allowedArrowDirections: [\"down\"],\r\n        }, {\r\n            direction: \"horizontal\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 0.5,\r\n            positionRatioX: 0,\r\n            positionRatioY: 0,\r\n            allowedArrowDirections: [\"right\"],\r\n        }, {\r\n            direction: \"vertical\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 0.5,\r\n            positionRatioX: -0.25,\r\n            positionRatioY: 0,\r\n            allowedArrowDirections: [\"down\"],\r\n        }, {\r\n            direction: \"horizontal\",\r\n            arrowDirectionIndex: 0,\r\n            lengthRatio: 1,\r\n            positionRatioX: -0.5,\r\n            positionRatioY: 0.5,\r\n            allowedArrowDirections: [\"right\"],\r\n        }\r\n    ]\r\n}","import { ArrowDirection } from \"../interface\";\r\n\r\nexport function Arrow(props: { direction: ArrowDirection }) {\r\n    const { direction } = props\r\n    return <>\r\n        {\r\n            direction === 'up'\r\n                ? <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" /></svg>\r\n                : direction === 'down'\r\n                    ? <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\" /></svg>\r\n                    : direction === 'left'\r\n                        ? <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" /></svg>\r\n                        : <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8-8-8z\" /></svg>\r\n        } </>\r\n}","export function Switch(props: { size: number }) {\r\n    return <> {\r\n        props.size === 1\r\n            ? <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M3 3h18v2H3V3z\" /></svg>\r\n            : <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M6 19h12v2H6v-2z\" /></svg>\r\n    } </>\r\n}","import { Direction } from \"../interface\";\r\n\r\nexport function Tab(props: { direction: Direction }) {\r\n    return <>\r\n        <div style={{ transform: `rotate(${45 + (props.direction === 'horizontal' ? 90 : 0)}deg)` }}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100px\" viewBox=\"0 0 24 24\" width=\"100px\" fill=\"#000000\">\r\n                <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\" />\r\n            </svg>\r\n        </div>\r\n    </>\r\n}","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\r\nimport { ButtonOperationState, Direction, } from '../interface'\r\nimport { Arrow } from './Arrow';\r\nimport { Switch } from './Switch';\r\nimport { Tab } from './Tab';\r\n\r\ninterface Props {\r\n    stage: number,\r\n    handleNextButton: any,\r\n    state: ButtonOperationState,\r\n}\r\n\r\nexport function Buttons(\r\n    props: Props\r\n) {\r\n    const { stage, handleNextButton, state } = props\r\n    const [direction, setDirection]: [Direction, Dispatch<SetStateAction<Direction>>] = useState<Direction>(state.direction)\r\n    const [switchState, setSwitchState]: [number, Dispatch<SetStateAction<number>>] = useState<number>(state.lengthRatio)\r\n    const [arrowDirectionIndex, setArrowDirectionIndex]: [number, Dispatch<SetStateAction<number>>] = useState<number>(state.arrowDirectionIndex)\r\n    useEffect(() => {\r\n        setDirection(state.direction)\r\n        setSwitchState(state.lengthRatio)\r\n        setArrowDirectionIndex(state.arrowDirectionIndex)\r\n    }, [state])\r\n    return (\r\n        <div>\r\n            <div>\r\n                Stage: {stage}\r\n            </div>\r\n            <div style={{ maxWidth: '600px', margin: 'auto', marginTop: '16px', display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}>\r\n                <div className=\"button-wrapper\" onClick={() => { setDirection(direction === \"horizontal\" ? \"vertical\" : \"horizontal\") }}>\r\n                    <Tab direction={direction} />\r\n                </div>\r\n                <div className=\"button-wrapper\" onClick={() => { setSwitchState(switchState === 1 ? 0.5 : 1) }}>\r\n                    <Switch size={switchState} />\r\n                </div>\r\n                <div className=\"button-wrapper\" onClick={() => { setArrowDirectionIndex((arrowDirectionIndex + 1) % state.allowedArrowDirections.length) }}>\r\n                    {\r\n                        stage !== 1\r\n                            ? <Arrow direction={state.allowedArrowDirections[arrowDirectionIndex]} />\r\n                            : void 0\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div style={{ marginTop: \"16px\" }}>\r\n                <button onClick={() => {\r\n                    handleNextButton(stage, direction, switchState, arrowDirectionIndex)\r\n                }}>Next</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nexport function TweetButton(props: {\r\n    text: string,\r\n    url: string,\r\n}) {\r\n    useEffect(() => {\r\n        if ((window as any).twttr !== void 0) {\r\n            (window as any).twttr.widgets.load(document.getElementById('twitter-share-button'));\r\n        }\r\n    }, [])\r\n    return <>\r\n        <a\r\n            id=\"twitter-share-button\"\r\n            className=\"twitter-share-button\"\r\n            href={`https://twitter.com/intent/tweet?size=large&text=${encodeURIComponent(props.text)}&url=${encodeURIComponent(props.url)}`}>\r\n            Tweet</a>\r\n    </>\r\n}","import React, { useState, Dispatch, SetStateAction } from 'react';\r\nimport './App.css';\r\nimport { OutputCanvas } from './components/OutputCanvas';\r\nimport { Buttons } from './components/Buttons';\r\nimport { Direction, OutputOperators } from './interface';\r\nimport { initializeGameState } from './initialize'\r\nimport { TweetButton } from './components/TweetButton';\r\n\r\nfunction App() {\r\n  const initState = initializeGameState()\r\n  const [stage, setStage]: [number, Dispatch<SetStateAction<number>>] = useState<number>(1)\r\n  const [outputs, setOutputOperators]: [OutputOperators, Dispatch<SetStateAction<OutputOperators>>] = useState<OutputOperators>(initState)\r\n  const handleNextButton = (stage: number, direction: Direction, switchState: number, arrowDirectionIndex: number) => {\r\n    const copy = [...outputs]\r\n    copy[stage - 1].direction = direction\r\n    copy[stage - 1].lengthRatio = switchState\r\n    copy[stage - 1].arrowDirectionIndex = arrowDirectionIndex\r\n\r\n    setStage(stage + 1)\r\n    setOutputOperators(copy)\r\n  }\r\n  const handleResetButton = () => {\r\n    setStage(1)\r\n    setOutputOperators(initState)\r\n  }\r\n  const isClear = (): boolean => {\r\n    return true\r\n      && outputs[1 - 1].arrowDirectionIndex === outputs[1 - 1].allowedArrowDirections.findIndex(e => e === 'right')\r\n      && outputs[1 - 1].direction === 'horizontal'\r\n      && outputs[1 - 1].lengthRatio === 1\r\n      && outputs[2 - 1].arrowDirectionIndex === outputs[2 - 1].allowedArrowDirections.findIndex(e => e === 'down')\r\n      && outputs[2 - 1].direction === 'vertical'\r\n      && outputs[2 - 1].lengthRatio === 1\r\n      && outputs[3 - 1].arrowDirectionIndex === outputs[3 - 1].allowedArrowDirections.findIndex(e => e === 'right')\r\n      && outputs[3 - 1].direction === 'horizontal'\r\n      && outputs[3 - 1].lengthRatio === 0.5\r\n      && outputs[4 - 1].arrowDirectionIndex === outputs[4 - 1].allowedArrowDirections.findIndex(e => e === 'down')\r\n      && outputs[4 - 1].direction === 'vertical'\r\n      && outputs[4 - 1].lengthRatio === 0.5\r\n      && outputs[5 - 1].arrowDirectionIndex === outputs[5 - 1].allowedArrowDirections.findIndex(e => e === 'right')\r\n      && outputs[5 - 1].direction === 'horizontal'\r\n      && outputs[5 - 1].lengthRatio === 1\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <OutputCanvas {...outputs}/>\r\n       <Buttons \r\n              stage={stage} \r\n              handleNextButton={handleNextButton}\r\n              state={outputs[Math.min(stage-1,4)]} // 後でよしなにする\r\n              /> */}\r\n\r\n      {\r\n        stage < 6\r\n          ? <Buttons\r\n            stage={stage}\r\n            handleNextButton={handleNextButton}\r\n            state={outputs[Math.min(stage - 1, 4)]}\r\n          />\r\n          : <>\r\n            <div>\r\n              <OutputCanvas {...outputs} />\r\n            </div>\r\n            <div>{isClear() ? \"Clear!\" : \"Failed...\"}</div>\r\n            <div>{isClear() ? <TweetButton text=\"#5CO を解き明かした！\" url=\"https://inrivity.github.io/5co/index.html\" /> : void 0}</div>\r\n            <button onClick={handleResetButton}>Reset</button>\r\n          </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}